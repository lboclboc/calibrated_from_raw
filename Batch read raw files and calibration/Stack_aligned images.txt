

// ********** Dedault data ***********

var aligneFolderDef = newArray(2);
	aligneFolderDef[0] = "aligne"; // Normal folder where aligned giles are stored from Image stabilizer
	aligneFolderDef[1] = "aligned"; // Folder where aligned images are stored from Image aligne

// Which colors to demosaic and keep when demosaic (only Flats and images)
var mosaicColorDef = newArray(5);
	mosaicColorDef[0] = 1; // Red
	mosaicColorDef[1] = 1; // Green1
	mosaicColorDef[2] = 1; // Green2
	mosaicColorDef[3] = 1; // Blue
	mosaicColorDef[4] = 0; // Mono, only modified cameras
	
// if enabled extra data add to the end of filename
// set cameradata = 0 (false) or cameradata = 1 (true)
var cameradataDef = 0 ;           // Default, change from menu
var equipmentDef  = "date_object_etc"; // Extra info in file name

makeStackAlignedImage();


// ffffffffff Function makeStackAlignedImage ffffffffff

function makeStackAlignedImage() {

Dialog.create("Stack aligned images");
Dialog.addMessage("Stack RG1G2B images to RGB");

Dialog.addChoice("     Aligne folder name :", aligneFolderDef, aligneFolderDef[0]); // Choose which folder where the aligned images are stored

Dialog.addCheckbox("Add extra info to filename ?", cameradataDef);
Dialog.addString("Date, Object etc :", equipmentDef);

Dialog.addMessage("Which colors to demosaic and keep (only Flats) ?");
Dialog.addCheckbox("Red",                mosaicColorDef[0]);
Dialog.addCheckbox("Green1",             mosaicColorDef[1]);
Dialog.addCheckbox("Green2",             mosaicColorDef[2]);
Dialog.addCheckbox("Blue",               mosaicColorDef[3]);
Dialog.addCheckbox("Mono (mod cameras, during work !)", mosaicColorDef[4]);

Dialog.show();


// ********** Save parameters from inputbox **********

aligneFolder = Dialog.getChoice(); // WHere the aligned images are stored

cameradata = Dialog.getCheckbox();
equipment = Dialog.getString();
if (cameradata) { 
	equipment = "_" + equipment;}
else {
	equipment = "";}
print("Extra file info = ", equipment);

mosaicColor = newArray(5) ; // Which color to demosaic and to keep
mosaicColor[0] = Dialog.getCheckbox();
print("Keep Red : ", mosaicColor[0]);

mosaicColor[1] = Dialog.getCheckbox();
print("Keep Green1 : ", mosaicColor[1]);

mosaicColor[2] = Dialog.getCheckbox();
print("Keep Green2 : ", mosaicColor[2]);

mosaicColor[3] = Dialog.getCheckbox();
print("Keep Blue : ", mosaicColor[3]);

mosaicColor[4] = Dialog.getCheckbox();
print("Keep Mono : ", mosaicColor[4]);

// ********** Star of stacking process **********


sourchMainAligne = getDirectory("Select main folder to aligne folder to stack");

// open(allignedFiles);
// allignedFilesID = getImageID();

dirSourcheFolderAligne = sourchMainAligne + aligneFolder + File.separator; // Stack directory
print("Folder aligne = ", dirSourcheFolderAligne);

dirDestStack = sourchMainAligne + "stack" + File.separator; // Stack directory
	if (File.exists(dirDestStack)) {
		print("Sub folder Stack already exist: " + dirDestStack);
		print("Place your Stacked images here");
	} else {
		File.makeDirectory(dirDestStack);
		print("New sub folder Stack created: " + dirDestStack);
		print("Please, place your Stacked images here");
	}


fileList = getFileList(dirSourcheFolderAligne);
numberOfFiles = fileList.length;

print("Number of aligned RGGB files to stack = ", numberOfFiles);

colorFilter = newArray(4); // Filter out out which colors rgbm to use in stack
if (mosaicColor[0]) { colorFilter[0] = "Red" ;
} else { colorFilter[0] = "none" ;
}

if (mosaicColor[1] && mosaicColor[2] ) {
	colorFilter[1] = "Green" ;
} else if (mosaicColor[1] && !mosaicColor[2]) {
	colorFilter[1] = "Green1" ;
} else if (!mosaicColor[1] && mosaicColor[2]) {
		colorFilter[1] = "Green2" ;
} else { colorFilter[1] = "none" ;
}

if (mosaicColor[3]) {
	colorFilter[2] = "Blue" ;
} else { colorFilter[2] = "none" ;
}

if (mosaicColor[4]) {
	colorFilter[3] = "Mono" ;
} else { colorFilter[3] = "none" ;
}

Array.print(colorFilter);

for (i=0; i<=3; i++) {
	if (colorFilter[i] != "none") {
		color = colorFilter[i] ;
		run("Image Sequence...", "open=[" + dirSourcheFolderAligne + "] number=numberOfFiles starting=1 increment=1 scale=100 file=&color or=[] sort use");
		fileIDvert = getImageID();
		numberOfColorFiles  = nSlices();
		print("Number of ", colorFilter[i], " image files to stack = ",  numberOfColorFiles);
		run("Z Project...", "start=1 stop=numberOfColorFiles projection=Median");
		fileIDstack = getImageID();
		saveAs("Tiff", dirDestStack + "median" + colorFilter[i] + equipment);
		if (isOpen(fileIDvert)) {selectImage(fileIDvert); close(); }
		if (isOpen(fileIDstack)) {selectImage(fileIDstack); close(); }
	}
}

// ********** END of function makeStackAlignedImage **********
